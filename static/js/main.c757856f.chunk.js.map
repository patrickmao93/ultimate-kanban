{"version":3,"sources":["reducers/lists.js","reducers/boards.js","reducers/ui.js","reducers/index.js","actions/types.js","reducers/cards.js","store.js","localStorage.js","Root.js","components/BoardCard.js","components/ui/LinkButton.js","components/ui/ClickCatcher.js","actions/ui.js","components/BoardDrawer.js","components/AppBar.js","components/ui/form/Button.js","components/ui/form/Input.js","components/ui/form/TextArea.js","components/ui/Editor.js","components/card/CardEditor.js","components/ui/Overlay.js","components/card/Card.js","constants/ItemTypes.js","actions/cards.js","actions/lists.js","components/AddCardButton.js","components/List.js","components/ui/Editable.js","components/AddListButton.js","actions/boards.js","components/Board.js","components/Boards.js","components/Content.js","components/CreateBoardModal.js","components/App.js","index.js"],"names":["id0","uuid","id1","id2","defaultState","_defaultState","Object","defineProperty","id","name","cardIds","editing","boards_defaultState","listIds","addListEditor","boardId","open","addCardEditor","listId","boardDrawer","pinned","createBoardModal","combineReducers","boards","state","arguments","length","undefined","action","type","payload","newState","assign","_boards","push","_action$payload","index","indexOf","splice","_action$payload2","_action$payload3","lists","objectSpread","cardId","_action$payload4","copyState","list","findIndex","cards","concat","toConsumableArray","slice","card","ui","copyAndUpdate","element","persistedState","serializedState","localStorage","getItem","JSON","parse","e","loadState","store","createStore","reducers","composeWithDevTools","subscribe","throttle","_store$getState","getState","stringify","setItem","alert","saveState","Root","props","react_default","a","createElement","es","children","BoardCard","className","onClick","this","React","Component","LinkButton","content","ClickCatcher","ReactDOM","createPortal","onDismiss","document","getElementById","toggleCreateBoardModal","BoardDrawer","renderBoards","_this$props","_this","boardIds","map","Link","to","key","components_BoardCard","renderPinToggleButton","_this$props2","pinBoardDrawer","ui_LinkButton","_this$props3","Input","fluid","placeholder","ui_ClickCatcher","connect","toggleBoardDrawer","handleDrawerClick","Button","primary","Icon","_props$boardDrawer","components_BoardDrawer","renderDrawer","ButtonWrapper","displayName","InputWrapper","ref","forwardref","TextAreaWrapper","TextArea","Editor","value","count","error","editorRef","createRef","inputRef","handleClick","stopPropagation","handleDismiss","style","current","opacity","maxHeight","setTimeout","handleInputChange","limit","setState","target","trim","exceedMaxCount","handleKeyDown","handleSubmit","preventDefault","focus","onSubmit","renderInput","child","cloneElement","onChange","onKeyDown","renderCount","renderTextArea","Ref","innerRef","_this$state","renderButton","renderChildren","Children","select","Form","CardEditor","onUpdate","_props$location","location","x","y","left","top","ui_Editor","autoHeight","Overlay","Card","cardRef","getLocation","_this$cardRef$current","getClientRects","renderEditor","ui_Overlay","card_CardEditor","renderCard","connectDragSource","onDelete","isDragging","DragSource","beginDrag","monitor","dragSource","isDraggin","createCard","labels","deleteCard","createList","attachToList","openAddCardEditor","closeAddCardEditor","button","editor","onCreateCard","autoFocus","components_List","updateCard","detachFromList","DropTarget","drop","dndConnect","connectDropTarget","dropTarget","isOver","handleDeleteCard","handleUpdateCard","find","cardProps","card_Card","components_AddCardButton","Editable","handleFinishEdit","onEdit","renderValue","readOnly","renderEdit","onBlur","defaultValue","defaultProps","openAddListEditor","closeAddListEditor","attachToBoard","listName","Board","handleNameClick","match","params","updateBoard","handleDeleteList","forEach","deleteList","renderLists","ui_Editable","updateList","board","Redirect","components_AddListButton","Boards","Content","Switch","Route","exact","path","component","render","components_Board","CreateBoardModal","App","handleCreateBoard","createBoard","history","components_CreateBoardModal","components_AppBar","components_Content","withRouter","DragDropContext","HTML5Backend","src_Root","HashRouter","components_App"],"mappings":"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","file":"static/js/main.c757856f.chunk.js","sourcesContent":["import uuid from \"uuid/v4\";\r\n\r\nimport * as actionTypes from \"actions/types\";\r\n\r\nexport const id0 = uuid();\r\nexport const id1 = uuid();\r\nexport const id2 = uuid();\r\n\r\nconst defaultState = {\r\n  [id0]: { id: id0, name: \"Todo\", cardIds: [], editing: false },\r\n  [id1]: { id: id1, name: \"Doing\", cardIds: [], editing: false },\r\n  [id2]: { id: id2, name: \"Done\", cardIds: [], editing: false }\r\n};\r\n\r\nconst copyState = state => {\r\n  return Object.assign({}, state);\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CREATE_LIST: {\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    }\r\n\r\n    case actionTypes.DELETE_LIST: {\r\n      const newState = Object.assign({}, state);\r\n      if (newState[action.payload.listId]) {\r\n        delete newState[action.payload.listId];\r\n      }\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.ATTACH_TO_LIST: {\r\n      const { listId, cardId } = action.payload;\r\n      const newState = Object.assign({}, state);\r\n      newState[listId].cardIds.push(cardId);\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.DETACH_FROM_LIST: {\r\n      const { listId, cardId } = action.payload;\r\n      const newState = Object.assign({}, state);\r\n      const index = newState[listId].cardIds.indexOf(cardId);\r\n      newState[listId].cardIds.splice(index, 1);\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.UPDATE_LIST: {\r\n      const { listId, name, editing } = action.payload;\r\n      const newState = Object.assign({}, state);\r\n      newState[listId].name = name;\r\n      newState[listId].editing = editing;\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.DELETE_CARD: {\r\n      const { cardId, listId } = action.payload;\r\n      const newState = copyState(state);\r\n      const list = newState[listId];\r\n\r\n      if (!list) {\r\n        return state;\r\n      }\r\n\r\n      const index = list.cardIds.findIndex(id => cardId === id);\r\n      list.cardIds.splice(index, 1);\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as actionTypes from \"actions/types\";\r\nimport { id0, id1, id2 } from \"./lists\";\r\n\r\nconst id = 0;\r\n\r\nconst defaultState = {\r\n  [id]: {\r\n    id: 0,\r\n    name: \"tasks\",\r\n    listIds: [id0, id1, id2],\r\n    editing: false\r\n  },\r\n  1: {\r\n    id: 1,\r\n    name: \"something!\",\r\n    listIds: [id0],\r\n    editing: false\r\n  },\r\n  _boards: [0, 1]\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CREATE_BOARD: {\r\n      const { boardId } = action.payload;\r\n      const newState = Object.assign({}, state);\r\n      if (!newState[boardId]) {\r\n        newState._boards.push(boardId);\r\n        newState[boardId] = action.payload;\r\n      }\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.DELETE_LIST: {\r\n      const { boardId, listId } = action.payload;\r\n      const newState = Object.assign({}, state);\r\n      if (newState[boardId]) {\r\n        const index = newState[boardId].listIds.indexOf(listId);\r\n        newState[boardId].listIds.splice(index, 1);\r\n      }\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.ATTACH_TO_BOARD: {\r\n      const { boardId, listId } = action.payload;\r\n      const newState = Object.assign({}, state);\r\n      if (newState[boardId]) {\r\n        newState[boardId].listIds.push(listId);\r\n      }\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.UPDATE_BOARD: {\r\n      const { boardId, name, editing } = action.payload;\r\n      const newState = Object.assign({}, state);\r\n      if (newState[boardId]) {\r\n        newState[boardId].name = name;\r\n        newState[boardId].editing = editing;\r\n      }\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as actionTypes from \"actions/types\";\r\n\r\nconst defaultState = {\r\n  addListEditor: {\r\n    boardId: null,\r\n    open: false\r\n  },\r\n  addCardEditor: {\r\n    listId: null,\r\n    open: false\r\n  },\r\n  boardDrawer: {\r\n    open: false,\r\n    pinned: false\r\n  },\r\n  createBoardModal: {\r\n    open: false\r\n  }\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  const copyAndUpdate = element => {\r\n    return { ...state, [element]: { ...state[element], ...action.payload } };\r\n  };\r\n\r\n  switch (action.type) {\r\n    case actionTypes.UI_ADD_LIST_EDITOR: {\r\n      return copyAndUpdate(\"addListEditor\");\r\n    }\r\n\r\n    case actionTypes.UI_ADD_CARD_EDITOR: {\r\n      return copyAndUpdate(\"addCardEditor\");\r\n    }\r\n\r\n    case actionTypes.UI_BOARD_DRAWER: {\r\n      return copyAndUpdate(\"boardDrawer\");\r\n    }\r\n\r\n    case actionTypes.UI_CREATE_BOARD_MODAL: {\r\n      return copyAndUpdate(\"createBoardModal\");\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport boardReducer from \"reducers/boards\";\r\nimport listsReducer from \"reducers/lists\";\r\nimport cardsReducer from \"reducers/cards\";\r\nimport uiReducer from \"reducers/ui\";\r\n\r\nexport default combineReducers({\r\n  boards: boardReducer,\r\n  lists: listsReducer,\r\n  cards: cardsReducer,\r\n  ui: uiReducer\r\n});\r\n","// Board actions\r\nexport const CREATE_BOARD = \"CREATE_BOARD\";\r\nexport const DELETE_BOARD = \"DELETE_BOARD\";\r\nexport const UPDATE_BOARD = \"UPDATE_BOARD\";\r\nexport const ATTACH_TO_BOARD = \"ATTACH_TO_BOARD\";\r\nexport const DETACH_FROM_BOARD = \"DETACH_FROM_BOARD\";\r\n\r\n// List actions\r\nexport const CREATE_LIST = \"CREATE_LIST\";\r\nexport const UPDATE_LIST = \"UPDATE_LIST\";\r\nexport const DELETE_LIST = \"DELETE_LIST\";\r\nexport const ATTACH_TO_LIST = \"ATTACH_TO_LIST\";\r\nexport const DETACH_FROM_LIST = \"DETACH_FROM_LIST\";\r\n\r\n// Card actions\r\nexport const CREATE_CARD = \"CREATE_CARD\";\r\nexport const UPDATE_CARD = \"UPDATE_CARD\";\r\nexport const DELETE_CARD = \"DELETE_CARD\";\r\n\r\n// UI actions\r\nexport const UI_ADD_LIST_EDITOR = \"UI_ADD_LIST_EDITOR\";\r\nexport const UI_ADD_CARD_EDITOR = \"UI_ADD_CARD_EDITOR\";\r\nexport const UI_BOARD_DRAWER = \"UI_BOARD_DRAWER\";\r\nexport const UI_CREATE_BOARD_MODAL = \"UI_CREATE_BOARD_MODAL\";\r\n","import * as actionTypes from \"actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CREATE_CARD:\r\n      return [...state, action.payload];\r\n\r\n    case actionTypes.UPDATE_CARD: {\r\n      const newState = state.slice(0);\r\n      const index = newState.findIndex(card => card.id === action.payload.id);\r\n      newState[index] = { ...newState[index], ...action.payload };\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.DELETE_CARD: {\r\n      const newState = state.slice(0);\r\n      const index = newState.findIndex(\r\n        card => card.id === action.payload.cardId\r\n      );\r\n      newState.splice(index, 1);\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import throttle from \"lodash/throttle\";\r\nimport { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport reducers from \"reducers\";\r\nimport { loadState, saveState } from \"./localStorage\";\r\n\r\nconst persistedState = loadState();\r\nconst store = createStore(reducers, persistedState, composeWithDevTools());\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    const { boards, lists, cards } = store.getState();\r\n    saveState({\r\n      boards,\r\n      lists,\r\n      cards\r\n    });\r\n  }, 1000)\r\n);\r\n\r\nexport default store;\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (e) {\r\n    alert(`Failed to save state: ${e}`);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"store\";\r\n\r\nconst Root = props => {\r\n  return <Provider store={store}>{props.children}</Provider>;\r\n};\r\n\r\nexport default Root;\r\n","import React from \"react\";\r\n\r\nclass BoardCard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"board-card\" onClick={this.props.onClick}>\r\n        <div className=\"board-card__thumbnail\">&nbsp;</div>\r\n        <div className=\"board-card__name\">{this.props.name}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardCard;\r\n","import React from \"react\";\r\n\r\nconst LinkButton = props => {\r\n  const { content } = props;\r\n  return (\r\n    <div className=\"link-button\" onClick={props.onClick}>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinkButton;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst ClickCatcher = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"click-catcher\" onClick={props.onDismiss} />,\r\n    document.getElementById(\"clickCatcher\")\r\n  );\r\n};\r\n\r\nexport default ClickCatcher;\r\n","import * as actionTypes from \"./types\";\r\n\r\nexport const openAddListEditor = boardId => {\r\n  return {\r\n    type: actionTypes.UI_ADD_LIST_EDITOR,\r\n    payload: {\r\n      boardId,\r\n      open: true\r\n    }\r\n  };\r\n};\r\n\r\nexport const closeAddListEditor = () => {\r\n  return {\r\n    type: actionTypes.UI_ADD_LIST_EDITOR,\r\n    payload: {\r\n      open: false\r\n    }\r\n  };\r\n};\r\n\r\nexport const openAddCardEditor = listId => {\r\n  return {\r\n    type: actionTypes.UI_ADD_CARD_EDITOR,\r\n    payload: {\r\n      listId,\r\n      open: true\r\n    }\r\n  };\r\n};\r\n\r\nexport const closeAddCardEditor = () => {\r\n  return {\r\n    type: actionTypes.UI_ADD_CARD_EDITOR,\r\n    payload: {\r\n      listId: null,\r\n      open: false\r\n    }\r\n  };\r\n};\r\n\r\nexport const toggleBoardDrawer = open => {\r\n  return {\r\n    type: actionTypes.UI_BOARD_DRAWER,\r\n    payload: {\r\n      open\r\n    }\r\n  };\r\n};\r\n\r\nexport const pinBoardDrawer = pinned => {\r\n  return {\r\n    type: actionTypes.UI_BOARD_DRAWER,\r\n    payload: {\r\n      pinned\r\n    }\r\n  };\r\n};\r\n\r\nexport const toggleCreateBoardModal = open => {\r\n  return {\r\n    type: actionTypes.UI_CREATE_BOARD_MODAL,\r\n    payload: {\r\n      open\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Input } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport BoardCard from \"./BoardCard\";\r\nimport LinkButton from \"./ui/LinkButton\";\r\nimport ClickCatcher from \"./ui/ClickCatcher\";\r\nimport { pinBoardDrawer, toggleCreateBoardModal } from \"actions/ui\";\r\n\r\nclass BoardDrawer extends React.Component {\r\n  renderBoards = () => {\r\n    const { boardIds, boards } = this.props;\r\n    return boardIds.map(boardId => (\r\n      <Link to={`/${boardId}`} key={boardId}>\r\n        <BoardCard {...boards[boardId]} onClick={this.props.onDismiss} />\r\n      </Link>\r\n    ));\r\n  };\r\n\r\n  renderPinToggleButton = () => {\r\n    const { pinned, pinBoardDrawer } = this.props;\r\n    if (pinned) {\r\n      return (\r\n        <LinkButton\r\n          content=\"Don't keep this menu open\"\r\n          onClick={() => pinBoardDrawer(!pinned)}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <LinkButton\r\n        content=\"Always keep this menu open\"\r\n        onClick={() => pinBoardDrawer(!pinned)}\r\n      />\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { pinned, toggleCreateBoardModal } = this.props;\r\n    const className = pinned ? \"board-drawer--pinned\" : \"\";\r\n\r\n    return ReactDOM.createPortal(\r\n      <div className={`board-drawer ${className}`}>\r\n        <div className={`board-drawer__header ${className}`}>\r\n          <span>Boards</span>\r\n        </div>\r\n        <div className=\"board-drawer__content\">\r\n          <div className=\"board-drawer__content__search\">\r\n            <Input fluid placeholder=\"Find boards by name...\" />\r\n          </div>\r\n          <div className=\"board-drawer__content__boards\">\r\n            {this.renderBoards()}\r\n          </div>\r\n          <div className=\"board-drawer__content__buttons\">\r\n            <LinkButton\r\n              content=\"Create new board...\"\r\n              onClick={() => toggleCreateBoardModal(true)}\r\n            />\r\n            {this.renderPinToggleButton()}\r\n          </div>\r\n        </div>\r\n        {pinned || <ClickCatcher onDismiss={this.props.onDismiss} />}\r\n        {}\r\n      </div>,\r\n      document.getElementById(\"drawer\")\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boardIds: state.boards._boards,\r\n    boards: state.boards\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { pinBoardDrawer, toggleCreateBoardModal }\r\n)(BoardDrawer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nimport BoardDrawer from \"./BoardDrawer\";\r\nimport { toggleBoardDrawer } from \"./../actions/ui\";\r\n\r\nconst AppBar = props => {\r\n  const handleDrawerClick = () => {\r\n    if (props.boardDrawer.open) {\r\n      return props.toggleBoardDrawer(false);\r\n    }\r\n    props.toggleBoardDrawer(true);\r\n  };\r\n\r\n  const renderDrawerButton = () => {\r\n    const { pinned } = props.boardDrawer;\r\n    return !pinned ? (\r\n      <Button\r\n        className=\"app-bar__boards-button\"\r\n        primary\r\n        onClick={handleDrawerClick}\r\n      >\r\n        <Icon name=\"square\" />\r\n        Boards\r\n      </Button>\r\n    ) : null;\r\n  };\r\n\r\n  const renderDrawer = () => {\r\n    const { pinned, open } = props.boardDrawer;\r\n    if (pinned) {\r\n      return <BoardDrawer pinned={pinned} />;\r\n    }\r\n    if (open) {\r\n      return (\r\n        <BoardDrawer\r\n          pinned={pinned}\r\n          onDismiss={() => props.toggleBoardDrawer(false)}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <header className=\"app-bar\">\r\n      {renderDrawerButton()}\r\n      <div className=\"app-bar__logo\" />\r\n      {renderDrawer()}\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boardDrawer: state.ui.boardDrawer\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { toggleBoardDrawer }\r\n)(AppBar);\r\n","import React from \"react\";\r\n\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nconst ButtonWrapper = props => {\r\n  return <Button {...props} />;\r\n};\r\n\r\nButtonWrapper.displayName = \"button\";\r\n\r\nexport default ButtonWrapper;\r\n","import React from \"react\";\r\n\r\nimport { Input } from \"semantic-ui-react\";\r\n\r\nconst InputWrapper = props => {\r\n  return <Input {...props} ref={props.forwardref} />;\r\n};\r\n\r\nInputWrapper.displayName = \"input\";\r\n\r\nexport default InputWrapper;\r\n","import React from \"react\";\r\n\r\nimport { TextArea } from \"semantic-ui-react\";\r\n\r\nconst TextAreaWrapper = props => {\r\n  return <TextArea {...props} />;\r\n};\r\n\r\nTextAreaWrapper.displayName = \"textarea\";\r\n\r\nexport default TextAreaWrapper;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Form, Ref } from \"semantic-ui-react\";\r\n\r\nimport ClickCatcher from \"./ClickCatcher\";\r\nimport Button from \"./form/Button\";\r\nimport Input from \"./form/Input\";\r\nimport TextArea from \"./form/TextArea\";\r\n\r\nclass Editor extends React.Component {\r\n  state = {\r\n    content: this.props.value || \"\",\r\n    count: this.props.value ? this.props.value.length : 0,\r\n    error: {}\r\n  };\r\n  editorRef = React.createRef();\r\n  inputRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    value: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    limit: PropTypes.number,\r\n    className: PropTypes.string,\r\n    onDismiss: PropTypes.func,\r\n    onSubmit: PropTypes.func\r\n  };\r\n\r\n  static Input = Input;\r\n  static TextArea = TextArea;\r\n  static Button = Button;\r\n\r\n  handleClick = e => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  handleDismiss = () => {\r\n    const style = this.editorRef.current.style;\r\n    style.opacity = 0;\r\n    style.maxHeight = \"36px\";\r\n\r\n    setTimeout(() => {\r\n      this.props.onDismiss();\r\n    }, 160);\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    if (!this.props.limit) {\r\n      return this.setState({ content: e.target.value });\r\n    }\r\n    //if limit is set, check if input length exceeds limit\r\n    const count = e.target.value.trim().length;\r\n    if (count >= this.props.limit) {\r\n      this.setState({ error: { exceedMaxCount: true } });\r\n    } else if (this.state.error.exceedMaxCount) {\r\n      this.setState({ error: { exceedMaxCount: false } });\r\n    }\r\n    this.setState({ content: e.target.value, count });\r\n  };\r\n\r\n  handleKeyDown = e => {\r\n    if (e.key === \"Enter\") {\r\n      return this.handleSubmit(e);\r\n    }\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e && e.preventDefault();\r\n    const content = this.state.content.trim();\r\n    if (!content || this.state.error.exceedMaxCount) return;\r\n    this.setState({ content: \"\" });\r\n    this.inputRef.current.focus();\r\n\r\n    this.props.onSubmit(content);\r\n  };\r\n\r\n  //renders Input component\r\n  renderInput = child => {\r\n    const { placeholder } = this.props;\r\n\r\n    return (\r\n      <div className=\"editor__input\">\r\n        {React.cloneElement(child, {\r\n          placeholder,\r\n          value: this.state.content,\r\n          onChange: this.handleInputChange,\r\n          onKeyDown: this.handleKeyDown,\r\n          forwardref: this.inputRef\r\n        })}\r\n        {this.renderCount()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //renders Input component\r\n  renderTextArea = child => {\r\n    const { placeholder } = this.props;\r\n\r\n    return (\r\n      <div className={`editor__textarea`}>\r\n        <Ref innerRef={this.inputRef}>\r\n          {React.cloneElement(child, {\r\n            placeholder,\r\n            value: this.state.content,\r\n            onChange: this.handleInputChange,\r\n            onKeyDown: this.handleKeyDown\r\n          })}\r\n        </Ref>\r\n        {this.renderCount()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderCount = () => {\r\n    const { limit } = this.props;\r\n    const { count, error } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className={`editor__count ${error.exceedMaxCount &&\r\n          \"editor__count--error\"}`}\r\n      >\r\n        <span>{limit && count + \"/\" + limit}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderButton = child => {\r\n    return (\r\n      <div className=\"editor__button\">\r\n        {React.cloneElement(child, {\r\n          primary: true,\r\n          onClick: this.handleSubmit\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderChildren = () => {\r\n    const { children } = this.props;\r\n    return React.Children.map(children, child => {\r\n      const name = child.type.displayName;\r\n      switch (name) {\r\n        case \"input\":\r\n          return this.renderInput(child);\r\n        case \"textarea\":\r\n          return this.renderTextArea(child);\r\n        case \"button\":\r\n          return this.renderButton(child);\r\n        default:\r\n          return child;\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.inputRef.current.focus();\r\n    this.inputRef.current.select();\r\n\r\n    const style = this.editorRef.current.style;\r\n    style.opacity = 1;\r\n    style.maxHeight = \"200px\";\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n    return (\r\n      <Ref innerRef={this.editorRef}>\r\n        <Form\r\n          className={`editor ${className || \"\"}`}\r\n          onSubmit={this.handleSubmit}\r\n          onClick={this.handleClick}\r\n        >\r\n          {this.renderChildren()}\r\n          <ClickCatcher onDismiss={this.handleDismiss} />\r\n        </Form>\r\n      </Ref>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\n\r\nimport Editor from \"./../ui/Editor\";\r\n\r\nconst CardEditor = props => {\r\n  const { onUpdate, value } = props;\r\n  const { x, y } = props.location;\r\n  return (\r\n    <div className=\"card-editor\" style={{ left: x - 8, top: y - 8 }}>\r\n      <Editor onSubmit={onUpdate} value={value} limit={80}>\r\n        <Editor.TextArea autoHeight />\r\n        <Editor.Button content=\"Save\" />\r\n      </Editor>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardEditor;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Overlay = props => {\r\n  const handleClick = e => {\r\n    e.stopPropagation();\r\n    props.onDismiss();\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"overlay\" onClick={handleClick}>\r\n      {props.children}\r\n    </div>,\r\n    document.getElementById(\"overlay\")\r\n  );\r\n};\r\n\r\nexport default Overlay;\r\n","import React from \"react\";\r\nimport { DragSource } from \"react-dnd\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nimport * as ItemTypes from \"constants/ItemTypes\";\r\nimport CardEditor from \"./CardEditor\";\r\nimport Overlay from \"../ui/Overlay\";\r\n\r\nconst cardSource = {\r\n  beginDrag(props) {\r\n    return {\r\n      id: props.id,\r\n      listId: props.listId\r\n    };\r\n  },\r\n  isDragging(props, monitor) {\r\n    return monitor.getItem().id === props.id;\r\n  }\r\n};\r\n\r\nconst collect = (connect, monitor) => {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    isDraggin: monitor.isDragging()\r\n  };\r\n};\r\n\r\nclass Card extends React.Component {\r\n  cardRef = React.createRef();\r\n\r\n  getLocation = () => {\r\n    const { x, y } = this.cardRef.current.getClientRects()[0];\r\n    return { x, y };\r\n  };\r\n\r\n  renderEditor = () => {\r\n    const { id, content, onUpdate } = this.props;\r\n    const location = this.getLocation();\r\n    return (\r\n      <Overlay onDismiss={() => onUpdate(id, content, false)}>\r\n        <CardEditor\r\n          location={location}\r\n          value={content}\r\n          onUpdate={content => onUpdate(id, content)}\r\n        />\r\n      </Overlay>\r\n    );\r\n  };\r\n\r\n  renderCard = () => {\r\n    const { connectDragSource, id, onDelete, editing, content } = this.props;\r\n    return connectDragSource(\r\n      // react-dnd doesn't like refs in outter div\r\n      <div>\r\n        <div\r\n          ref={this.cardRef}\r\n          className=\"card\"\r\n          onClick={() => this.props.onClick(id)}\r\n        >\r\n          <div className=\"card__labels\">\r\n            {/* <Label circular empty color=\"red\" /> */}\r\n          </div>\r\n          <div className=\"card__content\">\r\n            <p>{content}</p>\r\n          </div>\r\n          <div className=\"card__close\" onClick={() => onDelete(id)}>\r\n            <Icon name=\"times\" />\r\n          </div>\r\n          {editing && this.renderEditor()}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { isDragging } = this.props;\r\n    return isDragging ? null : this.renderCard();\r\n  }\r\n}\r\n\r\nexport default DragSource(ItemTypes.CARD, cardSource, collect)(Card);\r\n","export const CARD = \"CARD\";\r\n","import uuid from \"uuid/v4\";\r\n\r\nimport * as actionTypes from \"actions/types\";\r\n\r\nexport const createCard = content => {\r\n  return {\r\n    type: actionTypes.CREATE_CARD,\r\n    payload: {\r\n      id: uuid(),\r\n      editing: false,\r\n      content,\r\n      labels: []\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateCard = card => {\r\n  return {\r\n    type: actionTypes.UPDATE_CARD,\r\n    payload: card\r\n  };\r\n};\r\n\r\nexport const deleteCard = (listId, cardId) => {\r\n  return {\r\n    type: actionTypes.DELETE_CARD,\r\n    payload: {\r\n      cardId,\r\n      listId\r\n    }\r\n  };\r\n};\r\n","import uuid from \"uuid/v4\";\r\n\r\nimport * as actionTypes from \"actions/types\";\r\n\r\nexport const createList = name => {\r\n  return {\r\n    type: actionTypes.CREATE_LIST,\r\n    payload: {\r\n      id: uuid(),\r\n      name,\r\n      editing: false,\r\n      cardIds: []\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteList = (boardId, listId) => {\r\n  return {\r\n    type: actionTypes.DELETE_LIST,\r\n    payload: { boardId, listId }\r\n  };\r\n};\r\n\r\nexport const updateList = (listId, name, editing = false) => {\r\n  return {\r\n    type: actionTypes.UPDATE_LIST,\r\n    payload: {\r\n      listId,\r\n      name,\r\n      editing\r\n    }\r\n  };\r\n};\r\n\r\nexport const attachToList = (listId, cardId) => {\r\n  return {\r\n    type: actionTypes.ATTACH_TO_LIST,\r\n    payload: {\r\n      cardId,\r\n      listId\r\n    }\r\n  };\r\n};\r\n\r\nexport const detachFromList = (listId, cardId) => {\r\n  return {\r\n    type: actionTypes.DETACH_FROM_LIST,\r\n    payload: {\r\n      listId,\r\n      cardId\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nimport Editor from \"components/ui/Editor\";\r\nimport { openAddCardEditor, closeAddCardEditor } from \"actions/ui\";\r\nimport { createCard } from \"actions/cards\";\r\nimport { attachToList } from \"actions/lists\";\r\n\r\nconst AddCardButton = props => {\r\n  const button = (\r\n    <button\r\n      className=\"list__content__button\"\r\n      onClick={() => props.openAddCardEditor(props.listId)}\r\n    >\r\n      <Icon name=\"plus\" />\r\n      <span>Add another card</span>\r\n    </button>\r\n  );\r\n\r\n  const editor = (\r\n    <Editor\r\n      placeholder=\"Enter a title for this card...\"\r\n      onSubmit={props.onCreateCard}\r\n      onDismiss={props.closeAddCardEditor}\r\n      limit={80}\r\n    >\r\n      <Editor.TextArea autoHeight autoFocus />\r\n      <Editor.Button content=\"Add Card\" />\r\n    </Editor>\r\n  );\r\n\r\n  return props.open ? editor : button;\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { openAddCardEditor, closeAddCardEditor, createCard, attachToList }\r\n)(AddCardButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { DropTarget } from \"react-dnd\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nimport Card from \"components/card/Card\";\r\nimport AddCardButton from \"components/AddCardButton\";\r\nimport { createCard, updateCard, deleteCard } from \"actions/cards\";\r\nimport { attachToList, detachFromList } from \"actions/lists\";\r\nimport * as ItemTypes from \"constants/ItemTypes\";\r\n\r\nconst List = props => {\r\n  const { id, cardIds, onDelete, connectDropTarget } = props;\r\n\r\n  const handleCreateCard = content => {\r\n    const card = props.createCard(content);\r\n    props.attachToList(props.id, card.payload.id);\r\n  };\r\n\r\n  const handleDeleteCard = cardId => {\r\n    props.deleteCard(props.id, cardId);\r\n  };\r\n\r\n  const handleUpdateCard = (id, content, editing = false) => {\r\n    const card = {\r\n      id,\r\n      content,\r\n      editing\r\n    };\r\n    props.updateCard(card);\r\n  };\r\n\r\n  const handleClick = id => {\r\n    const card = props.cards.find(card => card.id === id);\r\n    card.editing = true;\r\n    props.updateCard(card);\r\n  };\r\n\r\n  const renderCards = () => {\r\n    return cardIds.map(cardId => {\r\n      const cardProps = props.cards.find(card => card.id === cardId);\r\n      return (\r\n        <Card\r\n          key={cardId}\r\n          onDelete={handleDeleteCard}\r\n          onUpdate={handleUpdateCard}\r\n          onClick={handleClick}\r\n          listId={props.id}\r\n          {...cardProps}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return connectDropTarget(\r\n    <div className=\"list\">\r\n      <div\r\n        className={`list__dragging-over ${props.isOver &&\r\n          \"list__dragging-over--active\"}`}\r\n      />\r\n      <div className=\"list__header\">\r\n        {props.children}\r\n        <div className=\"list__header__close\" onClick={() => onDelete(id)}>\r\n          <Icon name=\"times\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"list__content\">\r\n        {renderCards()}\r\n        <AddCardButton\r\n          open={props.addCardEditor.open && id === props.addCardEditor.listId}\r\n          onCreateCard={handleCreateCard}\r\n          listId={id}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  cards: PropTypes.array.isRequired\r\n};\r\n\r\nconst cardTarget = {\r\n  drop(props, monitor) {\r\n    const cardId = monitor.getItem().id;\r\n    const listId = monitor.getItem().listId;\r\n\r\n    props.detachFromList(listId, cardId);\r\n    props.attachToList(props.id, cardId);\r\n  }\r\n};\r\n\r\nconst collect = (dndConnect, monitor) => {\r\n  return {\r\n    connectDropTarget: dndConnect.dropTarget(),\r\n    isOver: monitor.isOver()\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  lists: state.lists,\r\n  cards: state.cards,\r\n  addCardEditor: state.ui.addCardEditor\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCard,\r\n    updateCard,\r\n    deleteCard,\r\n    attachToList,\r\n    detachFromList\r\n  }\r\n)(DropTarget(ItemTypes.CARD, cardTarget, collect)(List));\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nclass Editable extends React.Component {\r\n  state = { content: this.props.content };\r\n  inputRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    id: PropTypes.string,\r\n    editing: PropTypes.bool,\r\n    content: PropTypes.string,\r\n    onEdit: PropTypes.func.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    className: PropTypes.string\r\n  };\r\n\r\n  static defaultProps = {\r\n    editing: false\r\n  };\r\n\r\n  handleFinishEdit = e => {\r\n    const { content, id, onEdit } = this.props;\r\n    if (e.type === \"keydown\" && e.key !== \"Enter\") return;\r\n\r\n    const formatted = this.state.content.trim();\r\n    if (!formatted) {\r\n      this.setState({ content });\r\n      return onEdit(id, content);\r\n    }\r\n\r\n    onEdit(id, e.target.value);\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ content: e.target.value });\r\n  };\r\n\r\n  renderValue = () => {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        className={`editable ${this.props.className}`}\r\n        onClick={this.props.onClick}\r\n        value={this.state.content}\r\n        onChange={this.handleInputChange}\r\n        readOnly\r\n      />\r\n    );\r\n  };\r\n\r\n  renderEdit = () => {\r\n    return (\r\n      <input\r\n        ref={this.inputRef}\r\n        type=\"text\"\r\n        className={`editable editable--editing ${this.props.className}`}\r\n        onKeyDown={this.handleFinishEdit}\r\n        onBlur={this.handleFinishEdit}\r\n        onChange={this.handleInputChange}\r\n        defaultValue={this.props.content}\r\n        autoFocus={true}\r\n        value={this.state.content}\r\n      />\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    // if (this.inputRef.current) {\r\n    //   this.inputRef.current.select();\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    return this.props.editing ? this.renderEdit() : this.renderValue();\r\n  }\r\n}\r\n\r\nexport default Editable;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nimport { openAddListEditor, closeAddListEditor } from \"actions/ui\";\r\nimport { createList } from \"actions/lists\";\r\nimport { attachToBoard } from \"actions/boards\";\r\nimport Editor from \"components/ui/Editor\";\r\n\r\nconst AddListButton = props => {\r\n  const handleCreateList = listName => {\r\n    const list = props.createList(listName);\r\n    props.attachToBoard(props.boardId, list.payload.id);\r\n  };\r\n\r\n  const button = (\r\n    <button\r\n      className=\"add-list__button\"\r\n      onClick={() => props.openAddListEditor(props.boardId)}\r\n    >\r\n      <Icon name=\"plus\" /> Add another list\r\n    </button>\r\n  );\r\n\r\n  const editor = (\r\n    <Editor\r\n      className=\"add-list__editor\"\r\n      placeholder=\"Enter list title...\"\r\n      onSubmit={handleCreateList}\r\n      onDismiss={props.closeAddListEditor}\r\n      limit={25}\r\n    >\r\n      <Editor.Input fluid autoFocus />\r\n      <Editor.Button content=\"Add List\" />\r\n    </Editor>\r\n  );\r\n\r\n  return <div className=\"add-list\">{props.open ? editor : button}</div>;\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { openAddListEditor, closeAddListEditor, createList, attachToBoard }\r\n)(AddListButton);\r\n","import uuid from \"uuid/v4\";\r\n\r\nimport * as actionTypes from \"actions/types\";\r\n\r\nexport const createBoard = content => {\r\n  return {\r\n    type: actionTypes.CREATE_BOARD,\r\n    payload: {\r\n      boardId: uuid(),\r\n      name: content,\r\n      listIds: [],\r\n      editing: false\r\n    }\r\n  };\r\n};\r\n\r\nexport const attachToBoard = (boardId, listId) => {\r\n  return {\r\n    type: actionTypes.ATTACH_TO_BOARD,\r\n    payload: {\r\n      boardId,\r\n      listId\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateBoard = (boardId, name, editing = false) => {\r\n  return {\r\n    type: actionTypes.UPDATE_BOARD,\r\n    payload: {\r\n      boardId,\r\n      name,\r\n      editing\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport List from \"components/List\";\r\nimport Editable from \"components/ui/Editable\";\r\nimport AddListButton from \"components/AddListButton\";\r\nimport { updateList, createList, deleteList } from \"actions/lists\";\r\nimport { updateBoard } from \"actions/boards\";\r\nimport { deleteCard } from \"actions/cards\";\r\n\r\nclass Board extends React.Component {\r\n  handleNameClick = () => {\r\n    const id = this.props.match.params.id;\r\n    const name = this.props.boards[id].name;\r\n    this.props.updateBoard(id, name, true);\r\n  };\r\n\r\n  handleDeleteList = listId => {\r\n    const id = this.props.match.params.id;\r\n    const list = this.props.lists[listId];\r\n    list.cardIds.forEach(cardId => this.props.deleteCard(cardId));\r\n    this.props.deleteList(id, listId);\r\n  };\r\n\r\n  renderLists = () => {\r\n    const id = this.props.match.params.id;\r\n    const { boards, lists } = this.props;\r\n    return boards[id].listIds.map(listId => {\r\n      const list = lists[listId];\r\n      return (\r\n        <List\r\n          key={list.id}\r\n          {...list}\r\n          onDelete={() => this.handleDeleteList(list.id)}\r\n        >\r\n          <Editable\r\n            id={list.id}\r\n            content={list.name}\r\n            editing={list.editing}\r\n            onClick={() => this.props.updateList(list.id, list.name, true)}\r\n            onEdit={this.props.updateList}\r\n          />\r\n        </List>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const id = this.props.match.params.id;\r\n    const board = this.props.boards[id];\r\n    if (!board) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    const { name, editing } = board;\r\n\r\n    return (\r\n      <div className=\"board\">\r\n        <div className=\"board__header\">\r\n          <Editable\r\n            className=\"board__header__board-name\"\r\n            id={id}\r\n            onClick={this.handleNameClick}\r\n            editing={editing}\r\n            onEdit={this.props.updateBoard}\r\n            content={name}\r\n          />\r\n        </div>\r\n        <div className=\"board__content\">\r\n          {this.renderLists()}\r\n          <div className=\"board__content__add\">\r\n            <AddListButton\r\n              open={\r\n                this.props.addListEditor.open &&\r\n                id === this.props.addListEditor.boardId\r\n              }\r\n              boardId={id}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  boards: state.boards,\r\n  lists: state.lists,\r\n  addListEditor: state.ui.addListEditor\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateList, createList, deleteList, deleteCard, updateBoard }\r\n)(Board);\r\n","import React from \"react\";\r\n\r\nconst Boards = () => {\r\n  return <div>Boards</div>;\r\n};\r\n\r\nexport default Boards;\r\n","import React from \"react\";\r\nimport Board from \"./Board\";\r\nimport Boards from \"./Boards\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nclass Content extends React.Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Boards} />\r\n        <Route\r\n          path=\"/:id\"\r\n          exact\r\n          render={props => (\r\n            // key is set this way to ensure board is re-rendered\r\n            // every time the router param changes\r\n            <Board key={props.match.params.id} {...props} />\r\n          )}\r\n        />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\n\r\nimport Editor from \"components/ui/Editor\";\r\n\r\nclass CreateBoardModal extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"create-board-modal\">\r\n        <Editor\r\n          className=\"create-board-modal__editor\"\r\n          placeholder=\"Add board title\"\r\n          onSubmit={this.props.onSubmit}\r\n        >\r\n          <Editor.Input />\r\n          <Editor.Button content=\"Create Board\" />\r\n        </Editor>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateBoardModal;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HTML5Backend from \"react-dnd-html5-backend\";\r\nimport { DragDropContext } from \"react-dnd\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport AppBar from \"components/AppBar\";\r\nimport Content from \"components/Content\";\r\nimport CreateBoardModal from \"./CreateBoardModal\";\r\nimport Overlay from \"./ui/Overlay\";\r\nimport { toggleCreateBoardModal } from \"./../actions/ui\";\r\nimport { createBoard } from \"./../actions/boards\";\r\n\r\nclass App extends React.Component {\r\n  handleCreateBoard = content => {\r\n    const { payload } = this.props.createBoard(content);\r\n    this.props.toggleCreateBoardModal(false);\r\n    this.props.history.push(`/${payload.boardId}`);\r\n  };\r\n\r\n  createBoardModal = (\r\n    <Overlay onDismiss={() => this.props.toggleCreateBoardModal(false)}>\r\n      <CreateBoardModal onSubmit={this.handleCreateBoard} />\r\n    </Overlay>\r\n  );\r\n\r\n  render() {\r\n    const className = this.props.pinned ? \"app app--drawer-pinned\" : \"app\";\r\n    return (\r\n      <div className={className}>\r\n        <div id=\"clickCatcher\" />\r\n        <AppBar />\r\n        <Content />\r\n        {this.props.createBoardModal.open && this.createBoardModal}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boards: state.boards,\r\n    pinned: state.ui.boardDrawer.pinned,\r\n    createBoardModal: state.ui.createBoardModal\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  DragDropContext(HTML5Backend)(\r\n    connect(\r\n      mapStateToProps,\r\n      { toggleCreateBoardModal, createBoard }\r\n    )(App)\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport Root from \"./Root\";\r\nimport App from \"./components/App\";\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"styles/css/index.css\";\r\n\r\nReactDOM.render(\r\n  <Root>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Root>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}