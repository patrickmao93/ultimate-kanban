{"version":3,"sources":["reducers/lists.js","reducers/boards.js","reducers/ui.js","reducers/index.js","actions/types.js","reducers/cards.js","store.js","localStorage.js","Root.js","components/BoardCard.js","components/ui/LinkButton.js","components/ui/ClickCatcher.js","actions/ui.js","components/BoardDrawer.js","components/AppBar.js","components/ui/form/Button.js","components/ui/form/Input.js","components/ui/form/TextArea.js","components/ui/Editor.js","components/card/CardEditor.js","components/ui/Overlay.js","components/card/Card.js","constants/ItemTypes.js","actions/cards.js","actions/lists.js","components/AddCardButton.js","components/List.js","components/ui/Editable.js","components/AddListButton.js","actions/boards.js","components/Board.js","components/Boards.js","components/Content.js","components/CreateBoardModal.js","components/App.js","index.js"],"names":["id0","uuid","id1","id2","defaultState","_defaultState","Object","defineProperty","id","name","cardIds","editing","boards","0","listIds","1","boardIds","addListEditor","boardId","open","addCardEditor","listId","boardDrawer","pinned","createBoardModal","combineReducers","state","arguments","length","undefined","action","type","payload","newState","assign","push","_action$payload","newBoards","index","indexOf","splice","objectSpread","_action$payload2","_action$payload3","lists","cardId","_action$payload4","copyState","list","findIndex","cards","concat","toConsumableArray","slice","card","ui","copyAndUpdate","element","persistedState","serializedState","localStorage","getItem","JSON","parse","e","loadState","store","createStore","reducers","composeWithDevTools","subscribe","throttle","_store$getState","getState","stringify","setItem","alert","saveState","Root","props","react_default","a","createElement","es","children","BoardCard","className","onClick","this","React","Component","LinkButton","content","ClickCatcher","ReactDOM","createPortal","onDismiss","document","getElementById","toggleCreateBoardModal","formatString","str","Error","trim","toLowerCase","split","join","BoardDrawer","values","_this","filteredBoardIds","keyword","handleSearch","setState","target","value","filter","board","includes","map","renderBoards","Link","to","key","components_BoardCard","renderPinToggleButton","_this$props","pinBoardDrawer","ui_LinkButton","_this$props2","Input","fluid","placeholder","onChange","ui_ClickCatcher","connect","toggleBoardDrawer","handleDrawerClick","Button","primary","Icon","_props$boardDrawer","components_BoardDrawer","renderDrawer","ButtonWrapper","displayName","InputWrapper","ref","forwardref","TextAreaWrapper","TextArea","Editor","count","error","editorRef","createRef","inputRef","handleClick","stopPropagation","handleDismiss","style","current","opacity","maxHeight","setTimeout","handleInputChange","limit","exceedMaxCount","handleKeyDown","handleSubmit","preventDefault","focus","onSubmit","renderInput","child","cloneElement","onKeyDown","renderCount","renderTextArea","Ref","innerRef","_this$state","renderButton","renderChildren","Children","select","Form","CardEditor","onUpdate","_props$location","location","x","y","left","top","ui_Editor","autoHeight","Overlay","Card","cardRef","getLocation","_this$cardRef$current","getClientRects","renderEditor","ui_Overlay","card_CardEditor","renderCard","connectDragSource","onDelete","isDragging","DragSource","beginDrag","monitor","dragSource","isDraggin","createCard","labels","deleteCard","createList","attachToList","openAddCardEditor","closeAddCardEditor","button","editor","onCreateCard","autoFocus","components_List","updateCard","detachFromList","DropTarget","drop","dndConnect","connectDropTarget","dropTarget","isOver","handleDeleteCard","handleUpdateCard","find","cardProps","card_Card","components_AddCardButton","Editable","handleFinishEdit","onEdit","renderValue","readOnly","renderEdit","onBlur","defaultValue","defaultProps","openAddListEditor","closeAddListEditor","attachToBoard","listName","Board","match","params","handleNameClick","updateBoard","handleDeleteList","forEach","deleteList","renderLists","ui_Editable","updateList","Redirect","components_AddListButton","Boards","Content","Switch","Route","exact","path","component","render","components_Board","CreateBoardModal","App","handleCreateBoard","createBoard","history","components_CreateBoardModal","components_AppBar","components_Content","withRouter","DragDropContext","HTML5Backend","src_Root","HashRouter","components_App"],"mappings":"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","file":"static/js/main.7d1294df.chunk.js","sourcesContent":["import uuid from \"uuid/v4\";\r\n\r\nimport * as actionTypes from \"actions/types\";\r\n\r\nexport const id0 = uuid();\r\nexport const id1 = uuid();\r\nexport const id2 = uuid();\r\n\r\nconst defaultState = {\r\n  [id0]: { id: id0, name: \"Todo\", cardIds: [], editing: false },\r\n  [id1]: { id: id1, name: \"Doing\", cardIds: [], editing: false },\r\n  [id2]: { id: id2, name: \"Done\", cardIds: [], editing: false }\r\n};\r\n\r\nconst copyState = state => {\r\n  return Object.assign({}, state);\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CREATE_LIST: {\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    }\r\n\r\n    case actionTypes.DELETE_LIST: {\r\n      const newState = Object.assign({}, state);\r\n      if (newState[action.payload.listId]) {\r\n        delete newState[action.payload.listId];\r\n      }\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.ATTACH_TO_LIST: {\r\n      const { listId, cardId } = action.payload;\r\n      const newState = Object.assign({}, state);\r\n      newState[listId].cardIds.push(cardId);\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.DETACH_FROM_LIST: {\r\n      const { listId, cardId } = action.payload;\r\n      const newState = Object.assign({}, state);\r\n      const index = newState[listId].cardIds.indexOf(cardId);\r\n      newState[listId].cardIds.splice(index, 1);\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.UPDATE_LIST: {\r\n      const { listId, name, editing } = action.payload;\r\n      const newState = Object.assign({}, state);\r\n      newState[listId].name = name;\r\n      newState[listId].editing = editing;\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.DELETE_CARD: {\r\n      const { cardId, listId } = action.payload;\r\n      const newState = copyState(state);\r\n      const list = newState[listId];\r\n\r\n      if (!list) {\r\n        return state;\r\n      }\r\n\r\n      const index = list.cardIds.findIndex(id => cardId === id);\r\n      list.cardIds.splice(index, 1);\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as actionTypes from \"actions/types\";\r\nimport { id0, id1, id2 } from \"./lists\";\r\n\r\nconst defaultState = {\r\n  boards: {\r\n    0: {\r\n      id: 0,\r\n      name: \"Development\",\r\n      listIds: [id0, id1, id2],\r\n      editing: false\r\n    },\r\n    1: {\r\n      id: 1,\r\n      name: \"Personal Project\",\r\n      listIds: [id0],\r\n      editing: false\r\n    }\r\n  },\r\n  boardIds: [0, 1]\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CREATE_BOARD: {\r\n      const { boardId } = action.payload;\r\n      const newState = Object.assign({}, state);\r\n      if (!newState.boards[boardId]) {\r\n        newState.boardIds.push(boardId);\r\n        newState.boards[boardId] = action.payload;\r\n      }\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.DELETE_LIST: {\r\n      const { boardId, listId } = action.payload;\r\n      const newBoards = Object.assign({}, state.boards);\r\n      if (newBoards[boardId]) {\r\n        const index = newBoards[boardId].listIds.indexOf(listId);\r\n        newBoards[boardId].listIds.splice(index, 1);\r\n      }\r\n      return { ...state, boards: newBoards };\r\n    }\r\n\r\n    case actionTypes.ATTACH_TO_BOARD: {\r\n      const { boardId, listId } = action.payload;\r\n      const newState = Object.assign({}, state);\r\n      if (newState.boards[boardId]) {\r\n        newState.boards[boardId].listIds.push(listId);\r\n      }\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.UPDATE_BOARD: {\r\n      const { boardId, name, editing } = action.payload;\r\n      const newState = Object.assign({}, state);\r\n      if (newState.boards[boardId]) {\r\n        newState.boards[boardId].name = name;\r\n        newState.boards[boardId].editing = editing;\r\n      }\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as actionTypes from \"actions/types\";\r\n\r\nconst defaultState = {\r\n  addListEditor: {\r\n    boardId: null,\r\n    open: false\r\n  },\r\n  addCardEditor: {\r\n    listId: null,\r\n    open: false\r\n  },\r\n  boardDrawer: {\r\n    open: false,\r\n    pinned: false\r\n  },\r\n  createBoardModal: {\r\n    open: false\r\n  }\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  const copyAndUpdate = element => {\r\n    return { ...state, [element]: { ...state[element], ...action.payload } };\r\n  };\r\n\r\n  switch (action.type) {\r\n    case actionTypes.UI_ADD_LIST_EDITOR: {\r\n      return copyAndUpdate(\"addListEditor\");\r\n    }\r\n\r\n    case actionTypes.UI_ADD_CARD_EDITOR: {\r\n      return copyAndUpdate(\"addCardEditor\");\r\n    }\r\n\r\n    case actionTypes.UI_BOARD_DRAWER: {\r\n      return copyAndUpdate(\"boardDrawer\");\r\n    }\r\n\r\n    case actionTypes.UI_CREATE_BOARD_MODAL: {\r\n      return copyAndUpdate(\"createBoardModal\");\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport boardReducer from \"reducers/boards\";\r\nimport listsReducer from \"reducers/lists\";\r\nimport cardsReducer from \"reducers/cards\";\r\nimport uiReducer from \"reducers/ui\";\r\n\r\nexport default combineReducers({\r\n  boards: boardReducer,\r\n  lists: listsReducer,\r\n  cards: cardsReducer,\r\n  ui: uiReducer\r\n});\r\n","// Board actions\r\nexport const CREATE_BOARD = \"CREATE_BOARD\";\r\nexport const DELETE_BOARD = \"DELETE_BOARD\";\r\nexport const UPDATE_BOARD = \"UPDATE_BOARD\";\r\nexport const ATTACH_TO_BOARD = \"ATTACH_TO_BOARD\";\r\nexport const DETACH_FROM_BOARD = \"DETACH_FROM_BOARD\";\r\n\r\n// List actions\r\nexport const CREATE_LIST = \"CREATE_LIST\";\r\nexport const UPDATE_LIST = \"UPDATE_LIST\";\r\nexport const DELETE_LIST = \"DELETE_LIST\";\r\nexport const ATTACH_TO_LIST = \"ATTACH_TO_LIST\";\r\nexport const DETACH_FROM_LIST = \"DETACH_FROM_LIST\";\r\n\r\n// Card actions\r\nexport const CREATE_CARD = \"CREATE_CARD\";\r\nexport const UPDATE_CARD = \"UPDATE_CARD\";\r\nexport const DELETE_CARD = \"DELETE_CARD\";\r\n\r\n// UI actions\r\nexport const UI_ADD_LIST_EDITOR = \"UI_ADD_LIST_EDITOR\";\r\nexport const UI_ADD_CARD_EDITOR = \"UI_ADD_CARD_EDITOR\";\r\nexport const UI_BOARD_DRAWER = \"UI_BOARD_DRAWER\";\r\nexport const UI_CREATE_BOARD_MODAL = \"UI_CREATE_BOARD_MODAL\";\r\n","import * as actionTypes from \"actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CREATE_CARD:\r\n      return [...state, action.payload];\r\n\r\n    case actionTypes.UPDATE_CARD: {\r\n      const newState = state.slice(0);\r\n      const index = newState.findIndex(card => card.id === action.payload.id);\r\n      newState[index] = { ...newState[index], ...action.payload };\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.DELETE_CARD: {\r\n      const newState = state.slice(0);\r\n      const index = newState.findIndex(\r\n        card => card.id === action.payload.cardId\r\n      );\r\n      newState.splice(index, 1);\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import throttle from \"lodash/throttle\";\r\nimport { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport reducers from \"reducers\";\r\nimport { loadState, saveState } from \"./localStorage\";\r\n\r\nconst persistedState = loadState();\r\nconst store = createStore(reducers, persistedState, composeWithDevTools());\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    const { boards, lists, cards } = store.getState();\r\n    saveState({\r\n      boards,\r\n      lists,\r\n      cards\r\n    });\r\n  }, 1000)\r\n);\r\n\r\nexport default store;\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (e) {\r\n    alert(`Failed to save state: ${e}`);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"store\";\r\n\r\nconst Root = props => {\r\n  return <Provider store={store}>{props.children}</Provider>;\r\n};\r\n\r\nexport default Root;\r\n","import React from \"react\";\r\n\r\nclass BoardCard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"board-card\" onClick={this.props.onClick}>\r\n        <div className=\"board-card__thumbnail\">&nbsp;</div>\r\n        <div className=\"board-card__name\">{this.props.name}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardCard;\r\n","import React from \"react\";\r\n\r\nconst LinkButton = props => {\r\n  const { content } = props;\r\n  return (\r\n    <div className=\"link-button\" onClick={props.onClick}>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinkButton;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst ClickCatcher = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"click-catcher\" onClick={props.onDismiss} />,\r\n    document.getElementById(\"clickCatcher\")\r\n  );\r\n};\r\n\r\nexport default ClickCatcher;\r\n","import * as actionTypes from \"./types\";\r\n\r\nexport const openAddListEditor = boardId => {\r\n  return {\r\n    type: actionTypes.UI_ADD_LIST_EDITOR,\r\n    payload: {\r\n      boardId,\r\n      open: true\r\n    }\r\n  };\r\n};\r\n\r\nexport const closeAddListEditor = () => {\r\n  return {\r\n    type: actionTypes.UI_ADD_LIST_EDITOR,\r\n    payload: {\r\n      open: false\r\n    }\r\n  };\r\n};\r\n\r\nexport const openAddCardEditor = listId => {\r\n  return {\r\n    type: actionTypes.UI_ADD_CARD_EDITOR,\r\n    payload: {\r\n      listId,\r\n      open: true\r\n    }\r\n  };\r\n};\r\n\r\nexport const closeAddCardEditor = () => {\r\n  return {\r\n    type: actionTypes.UI_ADD_CARD_EDITOR,\r\n    payload: {\r\n      listId: null,\r\n      open: false\r\n    }\r\n  };\r\n};\r\n\r\nexport const toggleBoardDrawer = open => {\r\n  return {\r\n    type: actionTypes.UI_BOARD_DRAWER,\r\n    payload: {\r\n      open\r\n    }\r\n  };\r\n};\r\n\r\nexport const pinBoardDrawer = pinned => {\r\n  return {\r\n    type: actionTypes.UI_BOARD_DRAWER,\r\n    payload: {\r\n      pinned\r\n    }\r\n  };\r\n};\r\n\r\nexport const toggleCreateBoardModal = open => {\r\n  return {\r\n    type: actionTypes.UI_CREATE_BOARD_MODAL,\r\n    payload: {\r\n      open\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Input } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport BoardCard from \"./BoardCard\";\r\nimport LinkButton from \"./ui/LinkButton\";\r\nimport ClickCatcher from \"./ui/ClickCatcher\";\r\nimport { pinBoardDrawer, toggleCreateBoardModal } from \"actions/ui\";\r\n\r\nconst formatString = str => {\r\n  if (typeof str !== \"string\") {\r\n    throw new Error(\"input need to be string\");\r\n  }\r\n  return str\r\n    .trim()\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .join(\"\");\r\n};\r\n\r\nclass BoardDrawer extends React.Component {\r\n  boards = Object.values(this.props.boards);\r\n  state = {\r\n    filteredBoardIds: this.props.boardIds,\r\n    keyword: \"\"\r\n  };\r\n\r\n  handleSearch = e => {\r\n    this.setState({ keyword: e.target.value }, () => {\r\n      const keyword = formatString(this.state.keyword);\r\n      if (keyword === \"\") {\r\n        return this.setState({ filteredBoardIds: this.props.boardIds });\r\n      }\r\n      const filteredBoardIds = this.boards\r\n        .filter(board => formatString(board.name).includes(keyword))\r\n        .map(board => board.id);\r\n      this.setState({ filteredBoardIds });\r\n    });\r\n  };\r\n\r\n  renderBoards = () => {\r\n    const { boards } = this.props;\r\n    return this.state.filteredBoardIds.map(boardId => (\r\n      <Link to={`/${boardId}`} key={boardId}>\r\n        <BoardCard {...boards[boardId]} onClick={this.props.onDismiss} />\r\n      </Link>\r\n    ));\r\n  };\r\n\r\n  renderPinToggleButton = () => {\r\n    const { pinned, pinBoardDrawer } = this.props;\r\n    if (pinned) {\r\n      return (\r\n        <LinkButton\r\n          content=\"Don't keep this menu open\"\r\n          onClick={() => pinBoardDrawer(!pinned)}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <LinkButton\r\n        content=\"Always keep this menu open\"\r\n        onClick={() => pinBoardDrawer(!pinned)}\r\n      />\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { pinned, toggleCreateBoardModal } = this.props;\r\n    const className = pinned ? \"board-drawer--pinned\" : \"\";\r\n\r\n    return ReactDOM.createPortal(\r\n      <div className={`board-drawer ${className}`}>\r\n        <div className={`board-drawer__header ${className}`}>\r\n          <span>Boards</span>\r\n        </div>\r\n        <div className=\"board-drawer__content\">\r\n          <div className=\"board-drawer__content__search\">\r\n            <Input\r\n              fluid\r\n              placeholder=\"Find boards by name...\"\r\n              value={this.state.keyword}\r\n              onChange={this.handleSearch}\r\n            />\r\n          </div>\r\n          <div className=\"board-drawer__content__boards\">\r\n            {this.renderBoards()}\r\n          </div>\r\n          <div className=\"board-drawer__content__buttons\">\r\n            <LinkButton\r\n              content=\"Create new board...\"\r\n              onClick={() => toggleCreateBoardModal(true)}\r\n            />\r\n            {this.renderPinToggleButton()}\r\n          </div>\r\n        </div>\r\n        {pinned || <ClickCatcher onDismiss={this.props.onDismiss} />}\r\n        {}\r\n      </div>,\r\n      document.getElementById(\"drawer\")\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boardIds: state.boards.boardIds,\r\n    boards: state.boards.boards\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { pinBoardDrawer, toggleCreateBoardModal }\r\n)(BoardDrawer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nimport BoardDrawer from \"./BoardDrawer\";\r\nimport { toggleBoardDrawer } from \"./../actions/ui\";\r\n\r\nconst AppBar = props => {\r\n  const handleDrawerClick = () => {\r\n    if (props.boardDrawer.open) {\r\n      return props.toggleBoardDrawer(false);\r\n    }\r\n    props.toggleBoardDrawer(true);\r\n  };\r\n\r\n  const renderDrawerButton = () => {\r\n    const { pinned } = props.boardDrawer;\r\n    return !pinned ? (\r\n      <Button\r\n        className=\"app-bar__boards-button\"\r\n        primary\r\n        onClick={handleDrawerClick}\r\n      >\r\n        <Icon name=\"square\" />\r\n        Boards\r\n      </Button>\r\n    ) : null;\r\n  };\r\n\r\n  const renderDrawer = () => {\r\n    const { pinned, open } = props.boardDrawer;\r\n    if (pinned) {\r\n      return <BoardDrawer pinned={pinned} />;\r\n    }\r\n    if (open) {\r\n      return (\r\n        <BoardDrawer\r\n          pinned={pinned}\r\n          onDismiss={() => props.toggleBoardDrawer(false)}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <header className=\"app-bar\">\r\n      {renderDrawerButton()}\r\n      <div className=\"app-bar__logo\" />\r\n      {renderDrawer()}\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boardDrawer: state.ui.boardDrawer\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { toggleBoardDrawer }\r\n)(AppBar);\r\n","import React from \"react\";\r\n\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nconst ButtonWrapper = props => {\r\n  return <Button {...props} />;\r\n};\r\n\r\nButtonWrapper.displayName = \"button\";\r\n\r\nexport default ButtonWrapper;\r\n","import React from \"react\";\r\n\r\nimport { Input } from \"semantic-ui-react\";\r\n\r\nconst InputWrapper = props => {\r\n  return <Input {...props} ref={props.forwardref} />;\r\n};\r\n\r\nInputWrapper.displayName = \"input\";\r\n\r\nexport default InputWrapper;\r\n","import React from \"react\";\r\n\r\nimport { TextArea } from \"semantic-ui-react\";\r\n\r\nconst TextAreaWrapper = props => {\r\n  return <TextArea {...props} />;\r\n};\r\n\r\nTextAreaWrapper.displayName = \"textarea\";\r\n\r\nexport default TextAreaWrapper;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Form, Ref } from \"semantic-ui-react\";\r\n// import { Input, TextArea, Button, Form, Ref } from \"semantic-ui-react\";\r\n// When produce minified build \"child.type.name\" doesn't work, plus I don't\r\n// have access to the semantic components so I wrapped them in my component\r\nimport Button from \"./form/Button\";\r\nimport Input from \"./form/Input\";\r\nimport TextArea from \"./form/TextArea\";\r\n\r\nimport ClickCatcher from \"./ClickCatcher\";\r\n\r\nclass Editor extends React.Component {\r\n  state = {\r\n    content: this.props.value || \"\",\r\n    count: this.props.value ? this.props.value.length : 0,\r\n    error: {}\r\n  };\r\n  editorRef = React.createRef();\r\n  inputRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    value: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    limit: PropTypes.number,\r\n    className: PropTypes.string,\r\n    onDismiss: PropTypes.func,\r\n    onSubmit: PropTypes.func\r\n  };\r\n\r\n  static Input = Input;\r\n  static TextArea = TextArea;\r\n  static Button = Button;\r\n\r\n  handleClick = e => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  handleDismiss = () => {\r\n    const style = this.editorRef.current.style;\r\n    style.opacity = 0;\r\n    style.maxHeight = \"36px\";\r\n\r\n    setTimeout(() => {\r\n      this.props.onDismiss();\r\n    }, 160);\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    if (!this.props.limit) {\r\n      return this.setState({ content: e.target.value });\r\n    }\r\n    //if limit is set, check if input length exceeds limit\r\n    const count = e.target.value.trim().length;\r\n    if (count >= this.props.limit) {\r\n      this.setState({ error: { exceedMaxCount: true } });\r\n    } else if (this.state.error.exceedMaxCount) {\r\n      this.setState({ error: { exceedMaxCount: false } });\r\n    }\r\n    this.setState({ content: e.target.value, count });\r\n  };\r\n\r\n  handleKeyDown = e => {\r\n    if (e.key === \"Enter\") {\r\n      return this.handleSubmit(e);\r\n    }\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e && e.preventDefault();\r\n    const content = this.state.content.trim();\r\n    if (!content || this.state.error.exceedMaxCount) return;\r\n    this.setState({ content: \"\" });\r\n    this.inputRef.current.focus();\r\n\r\n    this.props.onSubmit(content);\r\n  };\r\n\r\n  //renders Input component\r\n  renderInput = child => {\r\n    const { placeholder } = this.props;\r\n\r\n    return (\r\n      <div className=\"editor__input\">\r\n        {React.cloneElement(child, {\r\n          placeholder,\r\n          value: this.state.content,\r\n          onChange: this.handleInputChange,\r\n          onKeyDown: this.handleKeyDown,\r\n          forwardref: this.inputRef\r\n        })}\r\n        {this.renderCount()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //renders Input component\r\n  renderTextArea = child => {\r\n    const { placeholder } = this.props;\r\n\r\n    return (\r\n      <div className={`editor__textarea`}>\r\n        <Ref innerRef={this.inputRef}>\r\n          {React.cloneElement(child, {\r\n            placeholder,\r\n            value: this.state.content,\r\n            onChange: this.handleInputChange,\r\n            onKeyDown: this.handleKeyDown\r\n          })}\r\n        </Ref>\r\n        {this.renderCount()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderCount = () => {\r\n    const { limit } = this.props;\r\n    const { count, error } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className={`editor__count ${error.exceedMaxCount &&\r\n          \"editor__count--error\"}`}\r\n      >\r\n        <span>{limit && count + \"/\" + limit}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderButton = child => {\r\n    return (\r\n      <div className=\"editor__button\">\r\n        {React.cloneElement(child, {\r\n          primary: true,\r\n          onClick: this.handleSubmit\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderChildren = () => {\r\n    const { children } = this.props;\r\n    return React.Children.map(children, child => {\r\n      const name = child.type.displayName;\r\n      switch (name) {\r\n        case \"input\":\r\n          return this.renderInput(child);\r\n        case \"textarea\":\r\n          return this.renderTextArea(child);\r\n        case \"button\":\r\n          return this.renderButton(child);\r\n        default:\r\n          return child;\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.inputRef.current.focus();\r\n    this.inputRef.current.select();\r\n\r\n    const style = this.editorRef.current.style;\r\n    style.opacity = 1;\r\n    style.maxHeight = \"200px\";\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n    return (\r\n      <Ref innerRef={this.editorRef}>\r\n        <Form\r\n          className={`editor ${className || \"\"}`}\r\n          onSubmit={this.handleSubmit}\r\n          onClick={this.handleClick}\r\n        >\r\n          {this.renderChildren()}\r\n          <ClickCatcher onDismiss={this.handleDismiss} />\r\n        </Form>\r\n      </Ref>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\n\r\nimport Editor from \"./../ui/Editor\";\r\n\r\nconst CardEditor = props => {\r\n  const { onUpdate, value } = props;\r\n  const { x, y } = props.location;\r\n  return (\r\n    <div className=\"card-editor\" style={{ left: x - 8, top: y - 8 }}>\r\n      <Editor onSubmit={onUpdate} value={value} limit={80}>\r\n        <Editor.TextArea autoHeight />\r\n        <Editor.Button content=\"Save\" />\r\n      </Editor>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardEditor;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Overlay = props => {\r\n  const handleClick = e => {\r\n    e.stopPropagation();\r\n    props.onDismiss();\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"overlay\" onClick={handleClick}>\r\n      {props.children}\r\n    </div>,\r\n    document.getElementById(\"overlay\")\r\n  );\r\n};\r\n\r\nexport default Overlay;\r\n","import React from \"react\";\r\nimport { DragSource } from \"react-dnd\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nimport * as ItemTypes from \"constants/ItemTypes\";\r\nimport CardEditor from \"./CardEditor\";\r\nimport Overlay from \"../ui/Overlay\";\r\n\r\nconst cardSource = {\r\n  beginDrag(props) {\r\n    return {\r\n      id: props.id,\r\n      listId: props.listId\r\n    };\r\n  },\r\n  isDragging(props, monitor) {\r\n    return monitor.getItem().id === props.id;\r\n  }\r\n};\r\n\r\nconst collect = (connect, monitor) => {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    isDraggin: monitor.isDragging()\r\n  };\r\n};\r\n\r\nclass Card extends React.Component {\r\n  cardRef = React.createRef();\r\n\r\n  getLocation = () => {\r\n    const { x, y } = this.cardRef.current.getClientRects()[0];\r\n    return { x, y };\r\n  };\r\n\r\n  renderEditor = () => {\r\n    const { id, content, onUpdate } = this.props;\r\n    const location = this.getLocation();\r\n    return (\r\n      <Overlay onDismiss={() => onUpdate(id, content, false)}>\r\n        <CardEditor\r\n          location={location}\r\n          value={content}\r\n          onUpdate={content => onUpdate(id, content)}\r\n        />\r\n      </Overlay>\r\n    );\r\n  };\r\n\r\n  renderCard = () => {\r\n    const { connectDragSource, id, onDelete, editing, content } = this.props;\r\n    return connectDragSource(\r\n      // react-dnd doesn't like refs in outter div\r\n      <div>\r\n        <div\r\n          ref={this.cardRef}\r\n          className=\"card\"\r\n          onClick={() => this.props.onClick(id)}\r\n        >\r\n          <div className=\"card__labels\">\r\n            {/* <Label circular empty color=\"red\" /> */}\r\n          </div>\r\n          <div className=\"card__content\">\r\n            <p>{content}</p>\r\n          </div>\r\n          <div className=\"card__close\" onClick={() => onDelete(id)}>\r\n            <Icon name=\"times\" />\r\n          </div>\r\n          {editing && this.renderEditor()}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { isDragging } = this.props;\r\n    return isDragging ? null : this.renderCard();\r\n  }\r\n}\r\n\r\nexport default DragSource(ItemTypes.CARD, cardSource, collect)(Card);\r\n","export const CARD = \"CARD\";\r\n","import uuid from \"uuid/v4\";\r\n\r\nimport * as actionTypes from \"actions/types\";\r\n\r\nexport const createCard = content => {\r\n  return {\r\n    type: actionTypes.CREATE_CARD,\r\n    payload: {\r\n      id: uuid(),\r\n      editing: false,\r\n      content,\r\n      labels: []\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateCard = card => {\r\n  return {\r\n    type: actionTypes.UPDATE_CARD,\r\n    payload: card\r\n  };\r\n};\r\n\r\nexport const deleteCard = (listId, cardId) => {\r\n  return {\r\n    type: actionTypes.DELETE_CARD,\r\n    payload: {\r\n      cardId,\r\n      listId\r\n    }\r\n  };\r\n};\r\n","import uuid from \"uuid/v4\";\r\n\r\nimport * as actionTypes from \"actions/types\";\r\n\r\nexport const createList = name => {\r\n  return {\r\n    type: actionTypes.CREATE_LIST,\r\n    payload: {\r\n      id: uuid(),\r\n      name,\r\n      editing: false,\r\n      cardIds: []\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteList = (boardId, listId) => {\r\n  return {\r\n    type: actionTypes.DELETE_LIST,\r\n    payload: { boardId, listId }\r\n  };\r\n};\r\n\r\nexport const updateList = (listId, name, editing = false) => {\r\n  return {\r\n    type: actionTypes.UPDATE_LIST,\r\n    payload: {\r\n      listId,\r\n      name,\r\n      editing\r\n    }\r\n  };\r\n};\r\n\r\nexport const attachToList = (listId, cardId) => {\r\n  return {\r\n    type: actionTypes.ATTACH_TO_LIST,\r\n    payload: {\r\n      cardId,\r\n      listId\r\n    }\r\n  };\r\n};\r\n\r\nexport const detachFromList = (listId, cardId) => {\r\n  return {\r\n    type: actionTypes.DETACH_FROM_LIST,\r\n    payload: {\r\n      listId,\r\n      cardId\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nimport Editor from \"components/ui/Editor\";\r\nimport { openAddCardEditor, closeAddCardEditor } from \"actions/ui\";\r\nimport { createCard } from \"actions/cards\";\r\nimport { attachToList } from \"actions/lists\";\r\n\r\nconst AddCardButton = props => {\r\n  const button = (\r\n    <button\r\n      className=\"list__content__button\"\r\n      onClick={() => props.openAddCardEditor(props.listId)}\r\n    >\r\n      <Icon name=\"plus\" />\r\n      <span>Add another card</span>\r\n    </button>\r\n  );\r\n\r\n  const editor = (\r\n    <Editor\r\n      placeholder=\"Enter a title for this card...\"\r\n      onSubmit={props.onCreateCard}\r\n      onDismiss={props.closeAddCardEditor}\r\n      limit={80}\r\n    >\r\n      <Editor.TextArea autoHeight autoFocus />\r\n      <Editor.Button content=\"Add Card\" />\r\n    </Editor>\r\n  );\r\n\r\n  return props.open ? editor : button;\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { openAddCardEditor, closeAddCardEditor, createCard, attachToList }\r\n)(AddCardButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { DropTarget } from \"react-dnd\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nimport Card from \"components/card/Card\";\r\nimport AddCardButton from \"components/AddCardButton\";\r\nimport { createCard, updateCard, deleteCard } from \"actions/cards\";\r\nimport { attachToList, detachFromList } from \"actions/lists\";\r\nimport * as ItemTypes from \"constants/ItemTypes\";\r\n\r\nconst List = props => {\r\n  const { id, cardIds, onDelete, connectDropTarget } = props;\r\n\r\n  const handleCreateCard = content => {\r\n    const card = props.createCard(content);\r\n    props.attachToList(props.id, card.payload.id);\r\n  };\r\n\r\n  const handleDeleteCard = cardId => {\r\n    props.deleteCard(props.id, cardId);\r\n  };\r\n\r\n  const handleUpdateCard = (id, content, editing = false) => {\r\n    const card = {\r\n      id,\r\n      content,\r\n      editing\r\n    };\r\n    props.updateCard(card);\r\n  };\r\n\r\n  const handleClick = id => {\r\n    const card = props.cards.find(card => card.id === id);\r\n    card.editing = true;\r\n    props.updateCard(card);\r\n  };\r\n\r\n  const renderCards = () => {\r\n    return cardIds.map(cardId => {\r\n      const cardProps = props.cards.find(card => card.id === cardId);\r\n      return (\r\n        <Card\r\n          key={cardId}\r\n          onDelete={handleDeleteCard}\r\n          onUpdate={handleUpdateCard}\r\n          onClick={handleClick}\r\n          listId={props.id}\r\n          {...cardProps}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return connectDropTarget(\r\n    <div className=\"list\">\r\n      <div\r\n        className={`list__dragging-over ${props.isOver &&\r\n          \"list__dragging-over--active\"}`}\r\n      />\r\n      <div className=\"list__header\">\r\n        {props.children}\r\n        <div className=\"list__header__close\" onClick={() => onDelete(id)}>\r\n          <Icon name=\"times\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"list__content\">\r\n        {renderCards()}\r\n        <AddCardButton\r\n          open={props.addCardEditor.open && id === props.addCardEditor.listId}\r\n          onCreateCard={handleCreateCard}\r\n          listId={id}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  cards: PropTypes.array.isRequired\r\n};\r\n\r\nconst cardTarget = {\r\n  drop(props, monitor) {\r\n    const cardId = monitor.getItem().id;\r\n    const listId = monitor.getItem().listId;\r\n\r\n    props.detachFromList(listId, cardId);\r\n    props.attachToList(props.id, cardId);\r\n  }\r\n};\r\n\r\nconst collect = (dndConnect, monitor) => {\r\n  return {\r\n    connectDropTarget: dndConnect.dropTarget(),\r\n    isOver: monitor.isOver()\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  lists: state.lists,\r\n  cards: state.cards,\r\n  addCardEditor: state.ui.addCardEditor\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createCard,\r\n    updateCard,\r\n    deleteCard,\r\n    attachToList,\r\n    detachFromList\r\n  }\r\n)(DropTarget(ItemTypes.CARD, cardTarget, collect)(List));\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nclass Editable extends React.Component {\r\n  state = { content: this.props.content };\r\n  inputRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    id: PropTypes.string,\r\n    editing: PropTypes.bool,\r\n    content: PropTypes.string,\r\n    onEdit: PropTypes.func.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    className: PropTypes.string\r\n  };\r\n\r\n  static defaultProps = {\r\n    editing: false\r\n  };\r\n\r\n  handleFinishEdit = e => {\r\n    const { content, id, onEdit } = this.props;\r\n    if (e.type === \"keydown\" && e.key !== \"Enter\") return;\r\n\r\n    const formatted = this.state.content.trim();\r\n    if (!formatted) {\r\n      this.setState({ content });\r\n      return onEdit(id, content);\r\n    }\r\n\r\n    onEdit(id, e.target.value);\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ content: e.target.value });\r\n  };\r\n\r\n  renderValue = () => {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        className={`editable ${this.props.className}`}\r\n        onClick={this.props.onClick}\r\n        value={this.state.content}\r\n        onChange={this.handleInputChange}\r\n        readOnly\r\n      />\r\n    );\r\n  };\r\n\r\n  renderEdit = () => {\r\n    return (\r\n      <input\r\n        ref={this.inputRef}\r\n        type=\"text\"\r\n        className={`editable editable--editing ${this.props.className}`}\r\n        onKeyDown={this.handleFinishEdit}\r\n        onBlur={this.handleFinishEdit}\r\n        onChange={this.handleInputChange}\r\n        defaultValue={this.props.content}\r\n        autoFocus={true}\r\n        value={this.state.content}\r\n      />\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    // if (this.inputRef.current) {\r\n    //   this.inputRef.current.select();\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    return this.props.editing ? this.renderEdit() : this.renderValue();\r\n  }\r\n}\r\n\r\nexport default Editable;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nimport { openAddListEditor, closeAddListEditor } from \"actions/ui\";\r\nimport { createList } from \"actions/lists\";\r\nimport { attachToBoard } from \"actions/boards\";\r\nimport Editor from \"components/ui/Editor\";\r\n\r\nconst AddListButton = props => {\r\n  const handleCreateList = listName => {\r\n    const list = props.createList(listName);\r\n    props.attachToBoard(props.boardId, list.payload.id);\r\n  };\r\n\r\n  const button = (\r\n    <button\r\n      className=\"add-list__button\"\r\n      onClick={() => props.openAddListEditor(props.boardId)}\r\n    >\r\n      <Icon name=\"plus\" /> Add another list\r\n    </button>\r\n  );\r\n\r\n  const editor = (\r\n    <Editor\r\n      className=\"add-list__editor\"\r\n      placeholder=\"Enter list title...\"\r\n      onSubmit={handleCreateList}\r\n      onDismiss={props.closeAddListEditor}\r\n      limit={25}\r\n    >\r\n      <Editor.Input fluid autoFocus />\r\n      <Editor.Button content=\"Add List\" />\r\n    </Editor>\r\n  );\r\n\r\n  return <div className=\"add-list\">{props.open ? editor : button}</div>;\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { openAddListEditor, closeAddListEditor, createList, attachToBoard }\r\n)(AddListButton);\r\n","import uuid from \"uuid/v4\";\r\n\r\nimport * as actionTypes from \"actions/types\";\r\n\r\nexport const createBoard = content => {\r\n  return {\r\n    type: actionTypes.CREATE_BOARD,\r\n    payload: {\r\n      boardId: uuid(),\r\n      name: content,\r\n      listIds: [],\r\n      editing: false\r\n    }\r\n  };\r\n};\r\n\r\nexport const attachToBoard = (boardId, listId) => {\r\n  return {\r\n    type: actionTypes.ATTACH_TO_BOARD,\r\n    payload: {\r\n      boardId,\r\n      listId\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateBoard = (boardId, name, editing = false) => {\r\n  return {\r\n    type: actionTypes.UPDATE_BOARD,\r\n    payload: {\r\n      boardId,\r\n      name,\r\n      editing\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport List from \"components/List\";\r\nimport Editable from \"components/ui/Editable\";\r\nimport AddListButton from \"components/AddListButton\";\r\nimport { updateList, createList, deleteList } from \"actions/lists\";\r\nimport { updateBoard } from \"actions/boards\";\r\nimport { deleteCard } from \"actions/cards\";\r\n\r\nclass Board extends React.Component {\r\n  boardId = this.props.match.params.id;\r\n\r\n  handleNameClick = () => {\r\n    const name = this.props.boards[this.boardId].name;\r\n    this.props.updateBoard(this.boardId, name, true);\r\n  };\r\n\r\n  handleDeleteList = listId => {\r\n    const list = this.props.lists[listId];\r\n    list.cardIds.forEach(cardId => this.props.deleteCard(listId, cardId));\r\n    this.props.deleteList(this.boardId, listId);\r\n  };\r\n\r\n  renderLists = () => {\r\n    const { boards, lists } = this.props;\r\n    return boards[this.boardId].listIds.map(listId => {\r\n      const list = lists[listId];\r\n      return (\r\n        <List\r\n          key={list.id}\r\n          {...list}\r\n          onDelete={() => this.handleDeleteList(list.id)}\r\n        >\r\n          <Editable\r\n            id={list.id}\r\n            content={list.name}\r\n            editing={list.editing}\r\n            onClick={() => this.props.updateList(list.id, list.name, true)}\r\n            onEdit={this.props.updateList}\r\n          />\r\n        </List>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const board = this.props.boards[this.boardId];\r\n    if (!board) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    const { name, editing } = board;\r\n\r\n    return (\r\n      <div className=\"board\">\r\n        <div className=\"board__header\">\r\n          <Editable\r\n            className=\"board__header__board-name\"\r\n            id={this.boardId}\r\n            onClick={this.handleNameClick}\r\n            editing={editing}\r\n            onEdit={this.props.updateBoard}\r\n            content={name}\r\n          />\r\n        </div>\r\n        <div className=\"board__content\">\r\n          {this.renderLists()}\r\n          <div className=\"board__content__add\">\r\n            <AddListButton\r\n              open={\r\n                this.props.addListEditor.open &&\r\n                this.boardId === this.props.addListEditor.boardId\r\n              }\r\n              boardId={this.boardId}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  boards: state.boards.boards,\r\n  lists: state.lists,\r\n  addListEditor: state.ui.addListEditor\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateList, createList, deleteList, deleteCard, updateBoard }\r\n)(Board);\r\n","import React from \"react\";\r\n\r\nconst Boards = () => {\r\n  return <div>Boards</div>;\r\n};\r\n\r\nexport default Boards;\r\n","import React from \"react\";\r\nimport Board from \"./Board\";\r\nimport Boards from \"./Boards\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nclass Content extends React.Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Boards} />\r\n        <Route\r\n          path=\"/:id\"\r\n          exact\r\n          render={props => (\r\n            // key is set this way to ensure board is re-rendered\r\n            // every time the router param changes\r\n            <Board key={props.match.params.id} {...props} />\r\n          )}\r\n        />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\n\r\nimport Editor from \"components/ui/Editor\";\r\n\r\nclass CreateBoardModal extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"create-board-modal\">\r\n        <Editor\r\n          className=\"create-board-modal__editor\"\r\n          placeholder=\"Add board title\"\r\n          onSubmit={this.props.onSubmit}\r\n        >\r\n          <Editor.Input />\r\n          <Editor.Button content=\"Create Board\" />\r\n        </Editor>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateBoardModal;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HTML5Backend from \"react-dnd-html5-backend\";\r\nimport { DragDropContext } from \"react-dnd\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport AppBar from \"components/AppBar\";\r\nimport Content from \"components/Content\";\r\nimport CreateBoardModal from \"./CreateBoardModal\";\r\nimport Overlay from \"./ui/Overlay\";\r\nimport { toggleCreateBoardModal } from \"./../actions/ui\";\r\nimport { createBoard } from \"./../actions/boards\";\r\n\r\nclass App extends React.Component {\r\n  handleCreateBoard = content => {\r\n    const { payload } = this.props.createBoard(content);\r\n    this.props.toggleCreateBoardModal(false);\r\n    this.props.history.push(`/${payload.boardId}`);\r\n  };\r\n\r\n  createBoardModal = (\r\n    <Overlay onDismiss={() => this.props.toggleCreateBoardModal(false)}>\r\n      <CreateBoardModal onSubmit={this.handleCreateBoard} />\r\n    </Overlay>\r\n  );\r\n\r\n  render() {\r\n    const className = this.props.pinned ? \"app app--drawer-pinned\" : \"app\";\r\n    return (\r\n      <div className={className}>\r\n        <div id=\"clickCatcher\" />\r\n        <AppBar />\r\n        <Content />\r\n        {this.props.createBoardModal.open && this.createBoardModal}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boards: state.boards,\r\n    pinned: state.ui.boardDrawer.pinned,\r\n    createBoardModal: state.ui.createBoardModal\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  DragDropContext(HTML5Backend)(\r\n    connect(\r\n      mapStateToProps,\r\n      { toggleCreateBoardModal, createBoard }\r\n    )(App)\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport Root from \"./Root\";\r\nimport App from \"./components/App\";\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"styles/css/index.css\";\r\n\r\nReactDOM.render(\r\n  <Root>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Root>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}